/// Mixin helping arranging items in container.
///
/// @author PTV Team
///
/// @access public
///
/// @param {boolean} $reversed [false] - order of items
/// @param {string} $align ['left'] - horizontal alignment of items
/// @param {number} $margin [10px] - vertical margin of item container
/// @param {number} $spacing [10px] - spacing between items
///
/// @example scss - Usage
///   .buttonGroup {
///     @include arrange-items($align: 'right');
///   }
@mixin arrange-items($reversed: false, $align: 'left', $margin: 10px, $spacing: 10px) {
  margin-top: $margin;
  margin-bottom: $margin;
  display: flex;
  @if not $reversed { // normal flow
    flex-direction: row;
    @if $align == 'left' { justify-content: flex-start; }
    @else if $align == 'center' { justify-content: center; }
    @else { justify-content: flex-end; }
  }
  @else { // reversed flow
    flex-direction: row-reverse;
    @if $align == 'left' { justify-content: flex-end; }
    @else if $align == 'center' { justify-content: center; }
    @else { justify-content: flex-start; }
  }
  > button {
    margin: 0;
    ~ button {
      @if not $reversed { // normal flow
        margin-left: $spacing;
      } @else { // reversed flow
        margin-right: $spacing;
      }
    }
  }
}

/// Mixin creating tooltip like container.
///
/// @author PTV Team
///
/// @access public
///
/// @param {string} $arrow-position ['left'] - alignment of tooltip arrow
///
/// @example scss - Usage
///   .preview {
///     @include tooltip-box();
///   }
@mixin tooltip-box($arrow-position: 'left') {
  $angle: -45deg;
  $left: -6px;
  $top: 20px;
  $right: auto;
  $bottom: auto;
  @if $arrow-position == 'up' {
    $angle: 45deg;
    $top: -6px;
    $bottom: auto;
    $left: 20px;
    $right: auto;
  } @else if $arrow-position == 'right' {
    $angle: 135deg;
    $top: 20px;
    $bottom: auto;
    $left: auto;
    $right: -6px;
  }
   @else if $arrow-position == 'down' {
    $angle: 225deg;
    $top: auto;
    $bottom: -6px;
    $left: 20px;
    $right: auto;
  }
  position: absolute;
  display: block;
  width: 10px;
  height: 10px;
  border-left: 1px solid border-color(border);
  border-top: 1px solid border-color(border);
  top: $top;
  left: $left;
  bottom: $bottom;
  right: $right;
  transform: rotate($angle);
  background-color: bg-color(content);
}

@mixin icon-caret($color, $orientation: 'down') {
  position: relative;
  $angle: 45deg;
  $verticalAdjustment: '7px';

  @if $orientation == 'up' {
    $angle: 225deg;
    $verticalAdjustment: '3px';
  }

  &:after {
    position: absolute;
    top: calc(50% - #{$verticalAdjustment});
    left: calc(50% - 5px);
    width: 10px;
    height: 10px;
    content: "";
    border: 0 solid $color;
    border-right-width: 2px;
    border-bottom-width: 2px;
    transform-origin: center center;
    transform: rotate($angle);
  }
}

/// Mixin creating small select field (using react-select).
///
/// @author PTV Team
///
/// @access public
///
/// @example scss - Usage
///   .dailyTo, .dailyFrom {
///     @include small-select();
///   }
@mixin small-select() {
  min-width: 80px;
  height: 30px;
  :global {
    .Select-control {
      font-size: 15px;
      height: 30px;
      line-height: 10px;
    }
    .Select-placeholder, .Select--single > .Select-control .Select-value {
      padding: 5px;
    }
    // .Select-clear-zone {
    //   width: 25px;
    // }
    .Select-clear {
      font-size: 20px;
    }
    .Select-arrow-zone {
      width: 10px;
      padding-right: 8px;
    }
    .is-clearable.has-value.Select--single > .Select-control .Select-value .Select-value-label,
    .is-clearable.has-value.is-pseudo-focused.Select--single > .Select-control .Select-value .Select-value-label {
      padding-right: 20px;
    }
    .Select-placeholder,
    .Select--single > .Select-control .Select-value {
      overflow: visible;
    }
    .has-value.Select--single > .Select-control .Select-value .Select-value-label,
    .has-value.is-pseudo-focused.Select--single > .Select-control .Select-value .Select-value-label {
      overflow: visible;
    }
  }
}

/// Mixin creating list bullet
///
/// @author PTV Team
///
/// @access public
///
/// @example scss - Usage
///   .someElement {
///     position: relative;
///     &::after {
///       @include pseudo-bullet();
///     }
///   }
@mixin pseudo-bullet() {
  content: '';
  border: 2px solid text-color(primary);
  display: inline-block;
  vertical-align: middle;
  position: absolute;
  border-radius: 50%;
  left: 0;
  top: 12px;
}

/// Mixin creating colored rectangle
///
/// @author PTV Team
///
/// @access public
///
/// @param {string} $color - text color
/// @param {string} $bgColor - background color
/// @param {number} $width [20px] - box width
/// @param {number} $height [20px] - box height
/// @param {number} $fontSize [14px] - font size
///
/// @example scss - Usage
///   .languageCode {
///     &.publiahed {
///       @include paint-box($bgColor: secondary-color(taivas));
///     }
///   }
@mixin paint-box($color: bg-color(content), $bgColor: secondary-color(lakka), $width: 20px, $height: $width, $fontSize: 14px) {
  cursor: pointer;
  text-align: center;
  border-radius: 1px;
  display: inline-block;
  color: $color;
  font-size: $fontSize;
  width: $width;
  height: $height;
  background-color: $bgColor;
}

@mixin form-basic() {
  background-color: bg-color(content);
  border: 1px solid border-color(border);
  position: relative;
}

@mixin form-compare() {
  content: '';
  border-left: 1px dashed border-color(border);
  position: absolute;
  left: calc(50% + 20px);
  top: 0;
  height: 100%;
}

@mixin spinner-basic() {
  margin: 20px;
  text-align: center;
}

@mixin label-warning() {
  line-height: 20px;
  font-size: 13px;
  margin-top: 5px;
  margin-bottom: 5px;
  color: status-color(danger);
}

@mixin autosize-off() {
  .Select-input {
    height: 0;
    width: 0;
    margin: 0;
    display: inline-block;
    input {
      padding: 0;
    }
  }
  .is-focused {
    .Select-input {
      height: auto;
      width: auto;
      margin: 5px 10px 0;
      padding: 2px 0 0;
      input {
        line-height: 20px;
        height: 25px;
        margin: 0;
      }
    }
  }
}
