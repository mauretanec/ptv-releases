@import '~sema-ui-components/src/components/styles/_variables.scss';

.withCounter {
  margin-bottom: -20px;
}

.textEditorHead {
  display: flex;
  justify-content: space-between;
}

.textEditorBody {
  background: bg-color(content);
  border: 1px solid bg-border-color(input-border);
  box-shadow: inset 0 1px 1px 0 rgba(0,0,0,0.20);
  border-radius: 2px;
  color: text-color(primary);
  padding: 10px;
  line-height: 20px;
  font-size: 16px;
  vertical-align: top;
  &.disabled {
    cursor: not-allowed;
    border-color: bg-border-color(input-border-disabled);
    background: -moz-linear-gradient(top, interaction-color(secondary-disabled), darken(interaction-color(secondary-disabled), 3%));
    background: -webkit-linear-gradient(top, interaction-color(secondary-disabled), darken(interaction-color(secondary-disabled), 3%));
    background: linear-gradient(to bottom, interaction-color(secondary-disabled), darken(interaction-color(secondary-disabled), 3%));
    box-shadow: inset 0 1px 2px 0 rgba(0,0,0,0.20);
    color: text-color(secondary-disabled);
  }
}

.hasFocus {
  border-color: interaction-color(primary);
  box-shadow: 0 0 3px 0 interaction-color(primary);
  outline: 0;
}

.styleButtons {
  display: flex;
  align-items: center;
}

.styleButton {
  padding: 0 3px;
  cursor: pointer;
  ~ .styleButton {
    margin-left: 8px;
  }
}

.styleButtonActive {
  background-color: bg-color(site);
}

@mixin erroneous-field($color) {
  border-width: 2px;
  border-color: $color;
  color: $color;
}

.error {
  @include erroneous-field(status-color(danger));
  &.textEditorBody {
    padding: 9px;
  }
  + .prefix {
    @include erroneous-field(status-color(danger));
    padding: 8px
  }
  .errorMessage {
    color: brand(warning);
    text-align: left;
    font-weight: 600;
    font-size: 14px;
  }
}

.prefix {
  padding: 9px;
  line-height: 20px;
  border: 1px solid bg-border-color(input-border);
  box-shadow: inset 0 1px 1px 0 rgba(0,0,0,0.20);
  background-color: interaction-color(secondary-disabled);
  border-radius: 2px;
  border-right: none;
  border-bottom-right-radius: 0;
  border-top-right-radius: 0;
  order: 1;
}

.bottomBar {
  line-height: 20px;
  font-size: 13px;
  margin-top: 5px;
  margin-bottom: 5px;
  display: flex;
  justify-content: space-between;
  &.reversed {
    flex-direction: row-reverse;
  }
  :global {
    span[class*='OverLimit'] {
      color: brand(warning);
    }
  }
}

// DRAFT.JS OVERRIDES
:global {
  .public-DraftStyleDefault-ol, .public-DraftStyleDefault-ul {
    margin: 0;
  }
  .public-DraftEditorPlaceholder-root {
    margin-left: 0;
    font-family: "Source Sans Pro", sans-serif;
    font-style: italic;
    color: text-color(placeholder);
  }
  .hidePlaceholder & {
    .public-DraftEditorPlaceholder-root {
      display: none;
    }
  }
  /* PTV-3081 */
  @-moz-document url-prefix() {
    .public-DraftStyleDefault-block, .public-DraftStyleDefault-ltr {
      overflow: hidden;
    }
  }

  @supports (-ms-ime-align: auto) {
    /* Microsoft EdgeV13&14 CSS styles go here */
    .public-DraftStyleDefault-block, .public-DraftStyleDefault-ltr {
      overflow: hidden;
    }
 }

 @supports (-ms-accelerator: true) {
     /* Microsoft EdgeV13 CSS styles go here */
     .public-DraftStyleDefault-block, .public-DraftStyleDefault-ltr {
      overflow: hidden;
    }
 }

  .public-DraftStyleDefault-block, .public-DraftStyleDefault-ltr {
    span {
      word-break: break-all;
    }
  }
  /* -------- */
}
