<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Warn"
      internalLogFile="c:\logs\PTV\OpenAPI\PTV-OpenAPI-nlog-internal.txt">

    <variable name="logDirectory" value="c:\logs\PTV\OpenAPI"/>
    <variable name="archiveDirectory" value="c:\logs\PTV\OpenAPI-Archive"/>
    <variable name="logElasticDirectory" value="c:\logs\PTV\OpenAPI"/>

    <!-- Load the ASP.NET Core plugin -->
    <extensions>
        <add assembly="NLog.Web.AspNetCore"/>
    </extensions>

    <!-- define various log targets -->
    <targets>
        <!-- write logs to file -->
        <!-- use this to write also other logs -->
        <!--<target xsi:type="File" name="allfile" fileName="c:\logs\PTV-nlog-all-${shortdate}.log"
                     layout="${longdate}|${uppercase:${level}}|${logger}|${message} ${exception}" />-->

        <!-- log for EF db queries in development -->
        <target xsi:type="File" name="ptvEFDbTrace" fileName="${logDirectory}\PTV-OpenApi-EF-queries.log"
                layout="${longdate}|${uppercase:${level}}|${logger}|${aspnet-TraceIdentifier}|${message} ${exception}${event-context:item=Operation} ${event-context:item=Table} ${event-context:item=RowId} ${event-context:item=User}"
                archiveFileName="${archiveDirectory}\PTV-OpenApi-EF-queries-{##}.log"
                archiveDateFormat="yyyy-MM-dd"
                archiveNumbering="DateAndSequence"
                archiveEvery="Minute"
                maxArchiveFiles="15"
                archiveOldFileOnStartup="true"/>

        <!-- Following file is for internal use. It is containing all the log entries in plain text format.-->
        <target xsi:type="File" name="ptvOpenApiAllFile" fileName="${logDirectory}\PTV-OpenApi-nlog.log"
                layout="${longdate}|${uppercase:${level}}|${logger}|${aspnet-TraceIdentifier}|${message} ${exception}"
                archiveFileName="${archiveDirectory}\PTV-OpenApi-nlog-{##}.log"
                archiveDateFormat="yyyy-MM-dd"
                archiveNumbering="DateAndSequence"
                archiveEvery="Hour"
                maxArchiveFiles="8"
                archiveOldFileOnStartup="true"/>

        <!-- Following json logs are for Elasticsearch.  -->
        <target xsi:type="File" name="dbChangesFileJson" fileName="${logElasticDirectory}\PTV-OpenApi-db.json"
                archiveFileName="${archiveDirectory}\PTV-OpenApi-db-{##}.json"
                archiveDateFormat="yyyy-MM-dd"
                archiveNumbering="DateAndSequence"
                archiveEvery="Hour"
                maxArchiveFiles="8"
                archiveOldFileOnStartup="true">
            <layout xsi:type="JsonLayout">
                <attribute name="@timestamp" layout="${date:universalTime=True:format=yyyy-MM-ddTHH\:mm\:ss.fffZ}"/>
                <attribute name="traceIdentifier" layout="${aspnet-TraceIdentifier}" />
                <attribute name="operation" layout="${event-context:item=Operation}" />
                <attribute name="table" layout="${event-context:item=Table}" />
                <attribute name="id" layout="${event-context:item=RowId}" />
                <attribute name="user" layout="${event-context:item=User}" />
                <!--<attribute name="message" layout="${message}"/>-->
                <!--<attribute name="logger" layout="${logger}"/>-->
            </layout>
        </target>

        <target xsi:type="File" name="errorsFileJson" fileName="${logElasticDirectory}\PTV-OpenApi-errors.json"
                archiveFileName="${archiveDirectory}\PTV-OpenApi-errors-{##}.json"
                archiveDateFormat="yyyy-MM-dd"
                archiveNumbering="DateAndSequence"
                archiveEvery="Hour"
                maxArchiveFiles="8"
                archiveOldFileOnStartup="true">
            <layout xsi:type="JsonLayout">
                <attribute name="@timestamp" layout="${date:universalTime=True:format=yyyy-MM-ddTHH\:mm\:ss.fffZ}"/>
                <attribute name="traceIdentifier" layout="${aspnet-TraceIdentifier}" />
                <attribute name="level" layout="${uppercase:${level}}"/>
                <attribute name="logger" layout="${logger}"/>
                <attribute name="message" layout="${message} ${exception}"/>
            </layout>
        </target>

        <target xsi:type="File" name="requestFileJson" fileName="${logElasticDirectory}\PTV-OpenApi-request.json"
                archiveFileName="${archiveDirectory}\PTV-OpenApi-request-{##}.json"
                archiveDateFormat="yyyy-MM-dd"
                archiveNumbering="DateAndSequence"
                archiveEvery="Hour"
                maxArchiveFiles="8"
                archiveOldFileOnStartup="true">
            <layout xsi:type="JsonLayout">
                <attribute name="@timestamp" layout="${date:universalTime=True:format=yyyy-MM-ddTHH\:mm\:ss.fffZ}"/>
                <attribute name="traceIdentifier" layout="${aspnet-TraceIdentifier}" />
                <attribute name="method" layout="${event-context:item=Method}"/>
                <attribute name="url" layout="${event-context:item=Url}" encode="false"/>
                <attribute name="user" layout="${event-context:item=User}"/>
            </layout>
        </target>

        <!-- Kestrel request log -->
        <target xsi:type="File" name="appHttpRequests" fileName="${logElasticDirectory}\PTV-OpenAPI-Kestrel-request.json"
                archiveFileName="${archiveDirectory}\PTV-OpenAPI-Kestrel-request-{##}.json"
                archiveDateFormat="yyyy-MM-dd"
                archiveNumbering="DateAndSequence"
                archiveEvery="Hour"
                maxArchiveFiles="8"
                archiveOldFileOnStartup="true">
            <layout xsi:type="JsonLayout">
                <attribute name="@timestamp" layout="${date:universalTime=True:format=yyyy-MM-ddTHH\:mm\:ss.fffZ}"/>
                <attribute name="traceIdentifier" layout="${aspnet-TraceIdentifier}"/>
                <attribute name="method" layout="${aspnet-request-method}"/>
                <attribute name="url" layout="&quot;${aspnet-request-url:IncludePort=true:IncludeQueryString=true}&quot;" encode="false"/>
                <attribute name="clientIP" layout="${custom-aspnet-request-ip}"/>
                <attribute name="isAuthenticated" layout="${aspnet-user-isAuthenticated}"/>
                <attribute name="authenticationType" layout="${aspnet-user-authtype}"/>
                <attribute name="aspNetIdentity" layout="${aspnet-user-identity}"/>
                <attribute name="machinename" layout="${machinename}"/>
                <attribute name="message" layout="${message}"/>
            </layout>
        </target>

        <target xsi:type="Null" name="blackhole" />
    </targets>

    <rules>
        <!--All logs, including from Microsoft-->
        <!--<logger name="*" minlevel="Trace" writeTo="allfile" />-->

        <!-- Uncomment below 2 entries to log EF db queries in development and also our own data access -->
        <!--<logger name="Microsoft.EntityFrameworkCore.*" minlevel="Trace" writeTo="ptvEFDbTrace" />
        <logger name="PTV.Database.DataAccess.Services.*" minlevel="Trace" writeTo="ptvEFDbTrace" />-->

        <!-- EF and Npgsql logging -->
        <!-- add Info level to levels attribute in Microsoft.EntityFrameworkCore.* logger to log executed SQL clauses -->
        <logger name="Microsoft.EntityFrameworkCore.*" levels="Info,Warn" writeTo="ptvEFDbTrace" final="true" />
        <logger name="Npgsql.*" levels="Info,Warn" writeTo="ptvEFDbTrace" final="true" />

        <!-- ignore rest of the EF and Npgsql informative log messages -->
        <logger name="Microsoft.EntityFrameworkCore.*" minlevel="Trace" maxlevel="Warn" writeTo="blackhole" final="true" />
        <logger name="Npgsql.*" minlevel="Trace" maxlevel="Warn" writeTo="blackhole" final="true" />

        <!-- Kestrel request log (begin and end) only INFO level messages -->
        <logger name="Microsoft.AspNetCore.Hosting.Internal.WebHost" level="Info" writeTo="appHttpRequests">
            <filters>
                <!-- can be filtered with message: 'Request starting ' and 'Request finished ' if only one log entry is desired or with 'Request ' to get both -->
                <when condition="not starts-with('${message}', 'Request finished ')" action="Ignore" />
            </filters>
        </logger>

        <!-- log all errors to one file -->
        <logger name="*" minlevel="Error" writeTo="errorsFileJson" final="true" />

        <!-- Elasticsearch log files-->
        <logger name="PTV.Database.DataAccess.*" level="Info" writeTo="dbChangesFileJson" final="true" />
        <logger name="PTV.Application.OpenApi.Controllers.*" level="Info" writeTo="requestFileJson">
            <filters>
                <!-- log only the entries written with LogRequestEntry extension method -->
                <when condition="length('${event-context:item=Method}') > 0" action="LogFinal" />
            </filters>
        </logger>

        <logger name="Microsoft.AspNetCore.*" minlevel="Warn" writeTo="ptvOpenApiAllFile" final="true" />
        <logger name="Microsoft.AspNetCore.*" maxlevel="Info" writeTo="blackhole" final="true" />

        <logger name="*" minlevel="Info" writeTo="ptvOpenApiAllFile" final="true" />
    </rules>
</nlog>